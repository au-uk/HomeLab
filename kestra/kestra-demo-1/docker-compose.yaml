networks:
  frontend:
    external: true
volumes:
  kestra-data:
    driver: local
  postgres-data:
    driver: local
services:
  postgres:
    image: postgres
    container_name: postgres-demo-1
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
    restart: unless-stopped
  kestra:
    image: kestra/kestra:latest-full
    container_name: kestra-demo-1
    pull_policy: always
    entrypoint: /bin/bash
    user: "root"
    command:
      - -c
      - /app/kestra server standalone --worker-thread=128 -c config.yaml
    volumes:
      - kestra-data:/app/storage
      - ./config/config.yaml:/app/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      - KESTRA_DOCKERHUB_USERNAME=${KESTRA_DOCKERHUB_USERNAME}
      - KESTRA_DOCKERHUB_PASSWORD=${KESTRA_DOCKERHUB_PASSWORD}
    ports:
      - 8280:8080
      - 8281:8081
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_started
